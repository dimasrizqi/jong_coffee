/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/dashboard.js":
/*!***********************************!*\
  !*** ./resources/js/dashboard.js ***!
  \***********************************/
/***/ (() => {

eval("/* \r\n    Programmer 1: Mr. Tan Wei Kang, Developer\r\n    Programmer 2: Ms. Lim Jia Yong, Project Manager\r\n    Description: Renders all charts and graphs with data queried from database\r\n    Edited on: 29 March 2022\r\n*/\n// https://apexcharts.com/javascript-chart-demos/dashboards/modern/\ndocument.addEventListener('DOMContentLoaded', function () {\n  var dailyRevenue = JSON.parse(document.querySelector('#generated-revenue').dataset.daily);\n  var totalRevenue = parseFloat(document.querySelector('#generated-revenue').dataset.total);\n  var dailyOrders = JSON.parse(document.querySelector('#order-revenue-chart').dataset.daily); // const totalOrders = parseInt(document.querySelector('#order-revenue-chart').dataset.total);\n  // dailyOrders.map(order => console.log(order.date, order.orders));\n\n  Apex.grid = {\n    padding: {\n      right: 0,\n      left: 0\n    }\n  };\n  Apex.dataLabels = {\n    enabled: false\n  }; // Chart 1 - Revenue Area Chart\n\n  var revenue = {\n    chart: {\n      id: 'sparkline1',\n      group: 'sparklines',\n      type: 'area',\n      height: 160,\n      sparkline: {\n        enabled: true\n      }\n    },\n    stroke: {\n      curve: 'straight'\n    },\n    fill: {\n      opacity: 1\n    },\n    series: [{\n      name: 'Revenue',\n      data: dailyRevenue.map(function (record) {\n        return typeof record.revenue == 'string' ? parseInt(record.revenue).toFixed(2) : record.revenue.toFixed(2);\n      }) // record.revenue.toFixed(2)\n\n    }],\n    labels: dailyRevenue.map(function (record) {\n      return record.date;\n    }),\n    yaxis: {\n      min: 0\n    },\n    xaxis: {\n      type: 'datetime'\n    },\n    colors: ['#DCE6EC'],\n    title: {\n      text: \"RM \".concat(totalRevenue),\n      offsetX: 30,\n      style: {\n        fontSize: '24px',\n        cssClass: 'apexcharts-yaxis-title'\n      }\n    },\n    subtitle: {\n      text: 'Revenue',\n      offsetX: 30,\n      style: {\n        fontSize: '14px',\n        cssClass: 'apexcharts-yaxis-title'\n      }\n    }\n  }; // Chart 7 - Order-Revenue Mixed bar line chart\n\n  var orderRevenue = {\n    series: [{\n      name: 'Orders',\n      type: 'column',\n      data: dailyOrders.map(function (record) {\n        return record.orders;\n      })\n    }, {\n      name: 'Revenue',\n      type: 'line',\n      data: dailyRevenue.map(function (record) {\n        return typeof record.revenue == 'string' ? parseInt(record.revenue).toFixed(2) : record.revenue.toFixed(2);\n      }) // record.revenue.toFixed(2)\n\n    }],\n    chart: {\n      height: 350,\n      type: 'line'\n    },\n    stroke: {\n      width: [0, 4]\n    },\n    title: {\n      text: 'Orders and Revenue',\n      style: {\n        fontSize: '18px',\n        cssClass: 'apexcharts-yaxis-title'\n      }\n    },\n    dataLabels: {\n      enabled: false,\n      enabledOnSeries: [1]\n    },\n    labels: dailyOrders.map(function (record) {\n      return record.date;\n    }),\n    xaxis: {\n      type: 'datetime'\n    },\n    yaxis: [{\n      title: {\n        text: 'Orders',\n        style: {\n          fontSize: '14px',\n          cssClass: 'apexcharts-yaxis-title'\n        }\n      }\n    }, {\n      opposite: true,\n      title: {\n        text: 'Revenue',\n        style: {\n          fontSize: '14px',\n          cssClass: 'apexcharts-yaxis-title'\n        }\n      }\n    }]\n  }; // Render charts\n\n  new ApexCharts(document.querySelector(\"#generated-revenue\"), revenue).render();\n  new ApexCharts(document.querySelector(\"#order-revenue-chart\"), orderRevenue).render();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/dashboard.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/dashboard.js"]();
/******/ 	
/******/ })()
;